local d = 0.0
local x = 0
local y = 0
local init_state = 0
local init_seq = 0

local function test()
    print("--------------------")
    print("Numbers")
    for i = 1, 10 do
        num = rnd.number()
        print("32 bit unsigned integer: " .. num)
    end

    print("--------------------")
    print("TOSS A COIN")
    for i = 1, 10 do
        num = rnd.toss()
        print("Toss: " .. num) -- 0 = 'H' : 1 = 'T'
    end

    print("--------------------")
    print("ROLL THE DICE")
    for i = 1, 10 do
        num = rnd.roll()
        print("Roll: " .. num)
    end

    print("--------------------")
    print("DOUBLE 0 -> 1 ")
    for i = 1, 10 do
        d = rnd.double()
        print("Double: " .. d) -- range [0,1]
    end

    print("--------------------")
    print("DOUBLE RANGE 1.2 -> 2.5 ")
    for i = 1, 10 do
        d = rnd.double_range(1.2, 2.5)
        print("Double Range: " .. d) 
    end

    print("--------------------")
    print("RANGE")
    for i = 1, 10 do
        x = rnd.range(10, 30)
        y = rnd.range(50, 70)
        print("Range:", x, y)
        num = rnd.range(x, y)
        print("Result (unsigned int): " .. num)
    end

    print("Error check:")
    local z =  rnd.range(10, 0) 
    print(z)
    print("--------------------")
    
    print("Return min:")
    local z =  rnd.range(5, 5) 
    print(z)
    print("--------------------")
end

function init(self)

    -- entropy test
    test()

    -- Static seed test
    init_state = 9191672977641436
    init_seq = 1156804664428462

    rnd.seed(init_state, init_seq)

    print("Static")
    test()

    -- re-seed by using entropy
    rnd.seed() -- Seed the generator using entropy
    test()

    -- system check
    rnd.check()

    print('Hello-----------------')
    local shuffled_deck = string.sub(rnd.shuffled_deck(), 1,-2)
    --local shuffled_deck = rnd.shuffled_deck()
    print(shuffled_deck:len())
    print('Hello-----------------')
    local str_cards = {}
    --print(shuffled_deck) 
    local i = 1
    for c in shuffled_deck:gmatch"." do
        -- do something with c
        str_cards[i] = c
        i = i+1
    end
    --print(str_cards)
    for i = 1, #shuffled_deck do
        print(str_cards[i]) 
    end
    print('Hello-----------------')
    print('number_of_points:'.. rnd.number_of_points('T'))
    print('Hello-----------------')

    local sum=0;
    for i = 1, 52 do
        sum = sum + rnd.number_of_points(str_cards[i])
    end
    print('Hello-----------------')
    print('sum_points:'.. sum)
    print('Hello-----------------')

    
    --[[print(shuffled_deck:len())
    print('Hello-----------------')]]
end
